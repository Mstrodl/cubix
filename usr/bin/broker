#!/usr/bin/env lua
--broker: the manager for cubix containers

function main(args)
    --[[
        broker nctr <file>
            Runs a lua file in a "Normal Container"
        broker initctr [-f <file>]
            Initializes a containe based on the Brokerfile file in the CURDIR
        broker runctr [-t]
            Runs an already initialized container
        broker killctr
            Destroys a container
    ]]
    print("Broker v0.0.1")
    if not os.lib.cbxctr then
        ferror("Broker needs cbxctr to run(Cubix Containers)")
    end

    if args[1] == 'nctr' then
        local f = shell.resolve(args[2])
        local h = fs.open(f, 'r')
        if h == nil then
            return ferror("Error opening the file "..f)
        end
        local fdata = h.readAll()
        h.close()
        print("Broker running "..f)
        local c = os.lib.cbxctr.NormalContainer('broker_nctr', f)
        c:extract()
        print("Done.")
    elseif args[1] == 'initctr' then
        local f = shell.resolve('Brokerfile')
        local h = fs.open(f, 'r')
        if h == nil then
            return ferror("Error opening Brokerfile")
        end
        local fdata = h.readAll()
        h.close()

        os.lib.cbxctr.brokerParser(fdata)
    end
end

main({...})
