#!/usr/bin/env lua
--comm_manager: communication and control manager

-- This manager makes communication between processes without files(resolving the /tmp/current_path issue)

local data = {}

local function local_register(proc_name, label, v)
    if v == nil then v = '' end
    if data[proc_name] == nil then
        data[proc_name] = {}
    end
    data[proc_name][label] = v
end

function register(process, label, h)
    local runningproc = os.lib.proc.get_processes()[os.getrunning()]
    if h == nil then h = '' end
    if runningproc == nil or runningproc == -1 then
        os.debug.debug_write("comm: no running process")
        return false
    end
    if runningproc.file == process then
        local_register(runningproc.file, label, h)
    elseif '/'..runningproc.file == process then
        local_register('/'..runningproc.file, label, h)
    else
        ferror("comm_manager: running process ~= process")
    end
end

function register_proof(proc, label, value)
    --prove to comm that even without running process, I am a process of myself
    if os.lib.proc.check_proof(proc) then
        local_register(proc.file, label, value)
    end
end

function get(process, label)
    if not data[process] then
        return nil
    end
    return data[process][label]
end

function libroutine()
end
