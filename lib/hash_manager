#!/usr/bin/env lua
--hash manager
--task: automate hash management, using a global object "hash"

hash = {}

function libroutine()
    if os.loadAPI("/lib/hash/sha256.lua") then
        sha256 = _G["sha256.lua"]
        os.debug.debug_write("[hash] sha256: loaded")
        hash.sha256 = sha256.hash_sha256
        local H = hash.sha256("hell")
        if H == "0ebdc3317b75839f643387d783535adc360ca01f33c75f7c1e7373adcd675c0b" then
            os.debug.testcase("[hash] sha256('hell') test = PASS")
        else
            os.debug.kpanic("[hash] sha256('hell') test = NOT PASS")
        end
    else
        os.debug.kpanic("[hash] sha256: not loaded")
    end

    if os.loadAPI("/lib/hash/md5.lua") then
        md5 = _G["md5.lua"]
        os.debug.debug_write("[hash] md5: loaded")
        hash.md5 = md5.md5_sumhexa
        local H = hash.md5("hell")
        if H == "4229d691b07b13341da53f17ab9f2416" then
            os.debug.testcase("[hash] md5('hell') test = PASS")
        else
            os.debug.kpanic("[hash] md5('hell') test = NOT PASS")
        end
    else
        os.debug.kpanic("[hash] md5: not loaded")
    end
end
