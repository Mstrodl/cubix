#!/usr/bin/env lua
--debug manager
--task: simplify debug information from program to user

__debug_buffer = ''
__debug_counter = 0

function debug_write_tobuffer(dmessage)
    __debug_buffer = __debug_buffer .. '[' .. __debug_counter ..']' .. dmessage
    local dfile = fs.open("/tmp/debug_info", 'a')
    dfile.write('[' .. __debug_counter ..']' .. dmessage)
    dfile.close()
    __debug_counter = __debug_counter + 1
end

function debug_write(dmessage, screen)
    if os.__kflag.nodebug == false or os.__kflag.nodebug == nil then
        if screen == nil then
            print('[' .. __debug_counter ..']' .. dmessage)
        end
        debug_write_tobuffer(dmessage..'\n')
        os.sleep(0.01)
    end
end

function dmesg()
    print(__debug_buffer)
end

function kpanic(message)
    debug_write("[cubix] Kernel Panic!")
    term.set_term_color(colors.red)
    debug_write(message)
    term.set_term_color(colors.white)
    os.system_halt()
end
