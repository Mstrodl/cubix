#!/usr/bin/env lua
--pipe manager
--task: support piping, like bash

os.__pipes = {}

Pipe = {}
Pipe.__index = Pipe
function Pipe.new(ptype)
    local inst = {}
    setmetatable(inst, Pipe)
    inst.ptype = ptype
    inst.pipe_buffer = ''
    inst.point = 1
    return inst
end

function Pipe.copyPipe(npipe)
    local inst = {}
    setmetatable(inst, Pipe)
    inst.ptype = npipe.ptype
    inst.pipe_buffer = npipe.pipe_buffer
    inst.point = npipe.point
    return inst
end

function Pipe:flush()
    self.pipe_buffer = ''
end

function Pipe:write(message)
    self.pipe_buffer = self.pipe_buffer .. message
end

function Pipe:readLine()
    local K = os.strsplit(self.pipe_buffer, '\n')
    local data = K[self.point]
    self.point = self.point + 1
    return data
end

function test_pipe()
    local t = Pipe.new('empty')
    t:write("Hello\nWorld!\n")
    local h = Pipe.copyPipe(t)
    print(t.pipe_buffer == h.pipe_buffer)
    print(h:readLine())
end

function libroutine()end

