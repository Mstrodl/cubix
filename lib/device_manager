#!/usr/bin/env lua
--device manager
--task: create devices in /dev

--devices:
--  device.name = string
--  device.device = table
--  device.device.read = function
--  device.device.devwrite = function

function loadDevice(name, path)
    os.debug.debug_write("[devman] loading "..name)
    if os.loadAPI(path) then
        _G[name] = _G[fs.getName(path)]
        os.debug.debug_write("[devman] loaded "..name)
    else
        os.debug.kpanic("[devman] not loaded "..name)
    end
end

MAPDEVICES_BLOCK = {}
MAPDEVICES_BLOCK[7] = {
    [0]={key='dev_dummy', name='/dev/dummy', lib='dummy_device.lua'}
}

MAPDEVICES_CHAR = {}
MAPDEVICES_CHAR[1] = {
    [3]={key='dev_null', name='/dev/null', lib='null_device.lua'},
    [5]={key='dev_zero', name='/dev/zero', lib='zero_device.lua'},
    [7]={key='dev_full', name='/dev/full', lib='full_device.lua'},
    [8]={key='dev_random', name='/dev/random', lib='random_device.lua'},
    [9]={key='dev_urandom', name='/dev/urandom', lib='urandom_device.lua'},
}

MAPDEVICES_CHAR[5] = {}

--create virtual disks(without loopback)
--fs-tools:
-- * copy from a fs to another fs

function lddev(path, type, major, minor)
    if type == 'b' then
        local d = MAPDEVICES_BLOCK[major][minor]
        if d == nil then
            ferror("lddev: device not found")
            return false
        end
        loadDevice(d.name, '/lib/devices/'..d.lib)
        os.internals._kernel.register_device(path, _G[d.name][d.key])
    elseif type == 'c' then
        local d = MAPDEVICES_CHAR[major][minor]
        if d == nil then
            ferror("lddev: device not found")
            return false
        end
        loadDevice(d.name, '/lib/devices/'..d.lib)
        os.internals._kernel.register_device(path, _G[d.name][d.key])
    end
end

function libroutine()
    --normal devices
    lddev('/dev/null', 'c', 1, 3)
    lddev('/dev/zero', 'c', 1, 5)
    lddev('/dev/full', 'c', 1, 7)
    lddev('/dev/random', 'c', 1, 8)
    lddev('/dev/urandom', 'c', 1, 9)

    --loopback devices
    lddev('/dev/loop0', 'b', 7, 0)
    lddev('/dev/loop1', 'b', 7, 0)
    lddev('/dev/loop2', 'b', 7, 0)
    lddev('/dev/loop3', 'b', 7, 0)
    lddev('/dev/loop4', 'b', 7, 0)
end
