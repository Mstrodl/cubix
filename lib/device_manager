#!/usr/bin/env lua
-- device manager
-- task: load devices to /dev using udev

-- device object:
--  device.name = string
--  device.device = table
--  device.device.device_read = function
--  device.device.device_write = function

MAPDEVICES_BLOCK = {}
MAPDEVICES_BLOCK[7] = {
    [0]={key='dev_dummy', name='/dev/dummy', lib='dummy_device.lua'}
}

MAPDEVICES_CHAR = {}
MAPDEVICES_CHAR[1] = {
    [3]={key='dev_null', name='/dev/null', lib='null_device.lua'},
    [5]={key='dev_zero', name='/dev/zero', lib='zero_device.lua'},
    [7]={key='dev_full', name='/dev/full', lib='full_device.lua'},
    [8]={key='dev_random', name='/dev/random', lib='random_device.lua'},
    [9]={key='dev_random', name='/dev/urandom', lib='random_device.lua'},
}

MAPDEVICES_CHAR[10] = {
    [8]={key='dev_mouse', name='/dev/mouse', lib='mouse_device.lua'}
}

--create virtual disks(without loopback)
--fs-tools:
-- * copy from a fs to another fs

function lddev(path, type, major, minor)
    if type == 'b' then
        local d = MAPDEVICES_BLOCK[major][minor]
        if d == nil then
            ferror("lddev: device not found")
            return false
        end
        local dobj = loadmodule_ret('/lib/devices/'..d.lib, nil, true)
        udev.new_device(path, {device=dobj[d.key].device})
    elseif type == 'c' then
        local d = MAPDEVICES_CHAR[major][minor]
        if d == nil then
            ferror("lddev: device not found")
            return false
        end
        local dobj = loadmodule_ret('/lib/devices/'..d.lib, nil, true)
        udev.new_device(path, {device=dobj[d.key].device})
    end
end

function libroutine()
    --normal devices
    lddev('/dev/null', 'c', 1, 3)
    lddev('/dev/zero', 'c', 1, 5)
    lddev('/dev/full', 'c', 1, 7)
    lddev('/dev/random', 'c', 1, 8)
    lddev('/dev/urandom', 'c', 1, 9)

    --loopback devices
    lddev('/dev/loop0', 'b', 7, 0)
    lddev('/dev/loop1', 'b', 7, 0)
    lddev('/dev/loop2', 'b', 7, 0)
    lddev('/dev/loop3', 'b', 7, 0)
    lddev('/dev/loop4', 'b', 7, 0)
    lddev('/dev/loop5', 'b', 7, 0)
    lddev('/dev/loop6', 'b', 7, 0)
    lddev('/dev/loop7', 'b', 7, 0)
    lddev('/dev/loop8', 'b', 7, 0)

    --mouse
    lddev("/dev/mouse", 'c', 10, 8)
end
