#!/usr/bin/env lua
--/bin/login: login user to its shell access

if os.loadAPI("/lib/tty_manager") then
    tty_mngr = _G["tty_manager"]
    debug.debug_write("[shell] tty_manager: loaded")
else
    debug.debug_write("[shell] tty_manager: not loaded")
end

function strsplit(inputstr, sep)
    if sep == nil then
        sep = "%s"
    end
    local t={} ; i=1
    for str in string.gmatch(inputstr, "([^"..sep.."]+)") do
        t[i] = str
        i = i + 1
    end
    return t
end

local cuser = fs.open("/tmp/current_user", 'r')
local cpath = fs.open("/tmp/current_path", 'r')
current_user = cuser.readAll()
current_path = cpath.readAll()
cuser.close()
cpath.close()

term.clear()
term.setCursorPos(1,1)

shell_tty = tty_mngr.new_tty("/dev/shell_tty")
tty_mngr.using_tty("/dev/shell_tty")

function shell_command(k)
    local c = strsplit(k, " ")
    local program = c[1]
    local args = ""
    for k,v in pairs(c) do
        if v == program then
        else
            args = args .. " " .. v
        end
    end
    if fs.exists(program) then
        shell.run(program .. args)
    elseif fs.exists(fs.combine(current_path, program)) then
        shell.run(fs.combine(current_path, program) .. args)
    elseif fs.exists(fs.combine("/bin/", program)) then
        shell.run(fs.combine("/bin/", program) .. args)
    elseif fs.exists(fs.combine("/sbin/", program)) then
        if current_user == "root" then
            shell.run(fs.combine("/sbin/", program) .. args)
        else
            term.set_term_color(colors.red)
            print("you are not root, fuck you")
            term.set_term_color(colors.white)
        end
    end
end

while true do
    local cuser = fs.open("/tmp/current_user", 'r')
    local cpath = fs.open("/tmp/current_path", 'r')
    current_user = cuser.readAll()
    current_path = cpath.readAll()
    cuser.close()
    cpath.close()
    shell_tty.write(current_user .. ':' .. current_path .. '$ ')
    command = shell_tty.read()
    if command == "exit" then break end
    shell_command(command)
end

os.sleep(3)
