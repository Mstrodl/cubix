#!/usr/bin/env lua
--/bin/login: login user to its shell access

function main(args)
    local user = args[1]
    if user == nil then user = "^" end
    local PC_HNAME = gethostname()
    local try_user = ""
    local try_pwd = ""

    if user == "^" then
        write(PC_HNAME.." login: ")
        try_user = read()
        write("Password: ")
        try_pwd = read("")
    else
        try_user = user
        write("Password: ")
        try_pwd = read("")
    end

    local ok, wd = os.lib.login.login(try_user, try_pwd)
    if ok then
        sleep(0)
        
        local k = fs.open("/tmp/current_user", 'w')
        if not k then os.debug.kpanic("cannot open /tmp/current_user") end
        k.write(try_user)
        k.close()

        local new_wd = "/home/"..try_user
        if try_user == 'root' then
            new_wd = '/root'
        else
            new_wd = "/home/"..try_user
        end

        local k2 = fs.open("/tmp/current_path", 'w')
        if not k2 then os.debug.kpanic("cannot open /tmp/current_path") end
        k2.write(new_wd)
        k2.close()

        --showing the initial path to csh
        os.lib.control.register('/sbin/login', 'cwd', new_wd)

        --getting itself as a process
        os.lib.control.register('/sbin/login', 'login_lock', '1')
        local itself = os.lib.proc.get_by_pid(pget_running())
        os.lib.control.register('/sbin/login', 'login_lock', nil)

        --running csh
        sleep(0)
        local a = fs.open("/etc/default_sh", 'r')
        local shell_path = a.readAll()
        a.close()

        local cshellproc = fork(shell_path)
        prexec(cshellproc, nil, nil, nil, nil, true)
    else
        os.ferror("\nLogin incorrect")
    end
end

main({...})
